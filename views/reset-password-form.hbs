<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reset Password</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    body, html {
      margin: 0;
      padding: 0;
      height: 100%;
      width: 100%;
      background: #CCCCCC;
      font-family: 'Poppins', monospace;
    }

    .wrapper {
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;      
    }

    .container {
      width: 50%;
      min-height: 50%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      border-radius: 1rem;
      background: white;
      padding: 10%;
      gap: 10%;
    }

    .title-container {
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    h1, p {
      text-align: center;
    }

    h1 {
      margin: 0;
      padding: 0;
    }

    .bold {
      font-weight: bold;
      text-decoration: underline;
    }

    .form-container {
      width: 100%;
    }

    form {
      display: flex;
      flex-direction: column;
    }

    form button{
      margin-top: 1rem;
    }

    label {
      font-weight: bold;
      margin-top: 1rem;
    }

    input {
      padding: 0.5rem;
      border-radius: 0.25rem;
      border: 1px solid #ddd;
      width: 100%;
    }

    input.red-border {
      border: 1px solid red !important;
    }

    .password-requirements {
      list-style: none;
      padding: 0;
      margin: 0;
      font-size: 0.875rem;
    }

    .password-requirements li {
      color: #999;
    }

    .password-requirements li.valid {
      color: green;
      font-weight: bold;
    }

    button {
      padding: 0.75rem;
      border: none;
      border-radius: 0.25rem;
      background-color: #007bff;
      color: white;
      font-size: 1rem;
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }

    .show-password {
      padding: 0;
      margin: 0;
      font-size: 0.875rem;
      text-decoration: underline;
      color: blue;
      cursor: pointer;
    }

    .input-wrapper {
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: start;
      align-items: start;
    }
  </style>
</head>
<body>
  <div class="wrapper">
    <div class="container">
      <div class="title-container">
        <h1>Olá, {{name}}</h1>
      </div>
      <p>Defina uma nova senha para seu login <span class="bold">{{email}}</span> na plataforma <span class="bold">ChatPix</span>.</p>
      <div class="form-container">
        <form id="resetPasswordForm" method="POST" action="/reset-password">
          <div class="input-wrapper">
            <label for="password">Nova Senha</label>
            <input type="password" id="password" name="password" required>
            <span class="show-password">Mostrar senha</span>
          </div>
          <ul class="password-requirements">
            <li id="minLength">- Deve ter pelo menos 8 caracteres</li>
            <li id="number">- Deve conter pelo menos 1 número</li>
            <li id="symbol">- Deve conter pelo menos 1 símbolo</li>
            <li id="uppercase">- Deve conter pelo menos 1 letra maiúscula</li>
          </ul>
          <div class="input-wrapper">
            <label for="confirmPassword">Confirme a Senha</label>
            <input type="password" id="confirmPassword" name="confirmPassword" required>
            <span class="show-password">Mostrar senha</span>
          </div>
          <button type="submit">Redefinir Senha</button>
        </form>
      </div>
    </div>
  </div>

  <script>
    function validatePassword(password) {
      const minLength = password.length >= 8;
      const number = /[0-9]/.test(password);
      const symbol = /[!@#$%^&*(),.?":{}|<>]/.test(password);
      const uppercase = /[A-Z]/.test(password);

      document.getElementById('minLength').classList.toggle('valid', minLength);
      document.getElementById('number').classList.toggle('valid', number);
      document.getElementById('symbol').classList.toggle('valid', symbol);
      document.getElementById('uppercase').classList.toggle('valid', uppercase);

      return minLength && number && symbol && uppercase;
    }

    function clearChildren(selector) {
      const element = document.querySelector(selector);
      if (element) {
        while (element.firstChild) {
          element.removeChild(element.firstChild);
        }
      }
    }

    document.querySelector('#password').addEventListener('input', function() {
      const password = this.value;
      validatePassword(password);
    });

    document.querySelectorAll('.input-wrapper').forEach(function(element) {
      const input = element.querySelector('input');
      const inputType = input.getAttribute('type');
      element.querySelector('span').addEventListener('click', function(event) {
        if (inputType === "password") input.setAttribute('type', 'text'); 
        else input.setAttribute('type', "password"); 
      });
    })

    document.querySelector('#password').addEventListener('blur', function() {
      const password = this.value;
      const isValid = validatePassword(password);
      if (!isValid) {
        this.classList.add('red-border');
        this.setCustomValidity('A senha não atende aos requisitos.');
      } else {
        this.classList.remove('red-border');
        this.setCustomValidity('');
      }
    });

    document.querySelector('#password').addEventListener('focus', function() {
      this.classList.remove('red-border');
    });

    document.querySelector('#confirmPassword').addEventListener('blur', function(event) {
      const password = document.querySelector('#password');
      const confirmPassword = event.target;

      if (password.value && password.value !== confirmPassword.value) {
        confirmPassword.classList.add('red-border');
        this.setCustomValidity('Deve ser identico a primeira senha.');
        this.reportValidity();
      } else {
        this.classList.remove('red-border');
        this.setCustomValidity('');
      }
    });

    document.querySelector('#resetPasswordForm').addEventListener('submit', function(event) {
      event.preventDefault();

      const password = document.querySelector('#password');
      const confirmPassword = document.querySelector('#confirmPassword');

      const isValid = validatePassword(password.value);
      if (!isValid) {
        password.classList.add('red-border');
        password.setCustomValidity('A senha não atende aos requisitos.');
        return;
      } else {
        password.classList.remove('red-border');
        password.setCustomValidity('');
      }

      if (password.value !== confirmPassword.value) {
        confirmPassword.setCustomValidity('Deve ser idêntico à primeira senha.');
        return;
      } else {
        confirmPassword.classList.remove('red-border');
        confirmPassword.setCustomValidity('');
      }

      const token = "{{token}}";
      const redirectUrl = "{{redirectUrl}}";

      const url = new URL('/auth/reset-password', window.location.origin);
      url.searchParams.append('token', token);

      const body = {
        password: password.value,
        redirectUrl: redirectUrl ?? undefined,
      }

      if (!redirectUrl) delete body.redirectUrl;

      fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(body),
      })
      .then(response => {
        if (response.ok) {
          if (redirectUrl) {
            window.location = redirectUrl;
            return;
          }
          alert('Senha redefinida com sucesso!');
          const container = document.querySelector('.container');
          clearChildren('.container');
          const p = document.createElement('p');
          p.appendChild(document.createTextNode('Nada mais à fazer por aqui !'));
          container.appendChild(p);
        } else {
          alert('Erro ao redefinir a senha.');
        }
      })
      .catch(error => {
        console.error('Erro:', error);
      });
    });
  </script>
</body>
</html>
